version: '3.8'

services:
  # API Gateway
  gateway:
    build: .
    ports:
      - "8080:8080"
    environment:
      - SERVER_PORT=8080
      - SERVER_MODE=release
      - JWT_SECRET=super-secret-jwt-key-change-in-production
      - RATE_LIMIT_ENABLED=true
      - RATE_LIMIT_RPS=100
      - METRICS_ENABLED=true
      - HEALTH_ENABLED=true
      - USER_SERVICE_URL=http://user-service:3001
      - ORDER_SERVICE_URL=http://order-service:3002
    depends_on:
      - user-service
      - order-service
      - prometheus
    networks:
      - gateway-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Mock User Service
  user-service:
    image: httpbin/httpbin:latest
    ports:
      - "3001:80"
    networks:
      - gateway-network
    restart: unless-stopped

  # Mock Order Service  
  order-service:
    image: httpbin/httpbin:latest
    ports:
      - "3002:80"
    networks:
      - gateway-network
    restart: unless-stopped

  # Prometheus for metrics
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./deployments/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - gateway-network
    restart: unless-stopped

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./deployments/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - gateway-network
    restart: unless-stopped
    depends_on:
      - prometheus

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - gateway-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  prometheus_data:
  grafana_data:
  redis_data:

networks:
  gateway-network:
    driver: bridge
